{"ast":null,"code":"var _class;\nimport { of } from \"rxjs\";\nimport { map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.username = '';\n    this.Url = \"http://localhost:8080/\";\n  }\n  addUser(user) {\n    return this.http.post(this.Url + \"users\", user).pipe(map(response => response));\n  }\n  userExists(username) {\n    const req = {\n      username: username\n    };\n    return this.http.post(this.Url + \"exists\", req);\n  }\n  loggedinuser() {\n    var userJson = localStorage.getItem(\"loggedInUser\");\n    console.log(userJson);\n    if (userJson) {\n      var loggedInUser = JSON.parse(userJson);\n      return of({\n        userid: loggedInUser.userid,\n        username: loggedInUser.username\n      });\n    }\n    return of({\n      userid: 0,\n      username: ''\n    });\n  }\n}\n_class = UserService;\n_class.ɵfac = function UserService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"names":["of","map","UserService","constructor","http","username","Url","addUser","user","post","pipe","response","userExists","req","loggedinuser","userJson","localStorage","getItem","console","log","loggedInUser","JSON","parse","userid","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Java Full Stack Training\\Capstone Project\\ecommerce_angular\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable,of } from \"rxjs\";\r\nimport { map } from \"rxjs\";\r\nimport { IUser } from \"./IUser\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class UserService {\r\n    constructor (private http: HttpClient) { }\r\n    \r\n    username:string='';\r\n    protected Url = \"http://localhost:8080/\";\r\n\r\n    addUser(user: IUser): Observable<IUser> {\r\n        return this.http.post<IUser>(this.Url + \"users\", user)\r\n        .pipe(map((response: any) =>response));\r\n    }\r\n\r\n    userExists(username:string):Observable<boolean>{\r\n        const req={username:username};\r\n        return this.http.post<boolean>(this.Url + \"exists\",req);\r\n    }\r\n\r\n    loggedinuser():Observable<{userid:number,username:string}>{\r\n        var userJson = localStorage.getItem(\"loggedInUser\");\r\n        console.log(userJson);\r\n        if (userJson) {\r\n            var loggedInUser: IUser = JSON.parse(userJson);\r\n            return of({userid:loggedInUser.userid,username:loggedInUser.username});\r\n        }\r\n        return of({userid:0,username:''});\r\n    }\r\n}"],"mappings":";AAEA,SAAoBA,EAAE,QAAQ,MAAM;AACpC,SAASC,GAAG,QAAQ,MAAM;;;AAM1B,OAAM,MAAOC,WAAW;EACpBC,YAAqBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAEzB,KAAAC,QAAQ,GAAQ,EAAE;IACR,KAAAC,GAAG,GAAG,wBAAwB;EAHC;EAKzCC,OAAOA,CAACC,IAAW;IACf,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAQ,IAAI,CAACH,GAAG,GAAG,OAAO,EAAEE,IAAI,CAAC,CACrDE,IAAI,CAACT,GAAG,CAAEU,QAAa,IAAIA,QAAQ,CAAC,CAAC;EAC1C;EAEAC,UAAUA,CAACP,QAAe;IACtB,MAAMQ,GAAG,GAAC;MAACR,QAAQ,EAACA;IAAQ,CAAC;IAC7B,OAAO,IAAI,CAACD,IAAI,CAACK,IAAI,CAAU,IAAI,CAACH,GAAG,GAAG,QAAQ,EAACO,GAAG,CAAC;EAC3D;EAEAC,YAAYA,CAAA;IACR,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACnDC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;IACrB,IAAIA,QAAQ,EAAE;MACV,IAAIK,YAAY,GAAUC,IAAI,CAACC,KAAK,CAACP,QAAQ,CAAC;MAC9C,OAAOf,EAAE,CAAC;QAACuB,MAAM,EAACH,YAAY,CAACG,MAAM;QAAClB,QAAQ,EAACe,YAAY,CAACf;MAAQ,CAAC,CAAC;;IAE1E,OAAOL,EAAE,CAAC;MAACuB,MAAM,EAAC,CAAC;MAAClB,QAAQ,EAAC;IAAE,CAAC,CAAC;EACrC;;SAxBSH,WAAW;;mBAAXA,MAAW,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXzB,MAAW;EAAA0B,OAAA,EAAX1B,MAAW,CAAA2B,IAAA;EAAAC,UAAA,EAFR;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}